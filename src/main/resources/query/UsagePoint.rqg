# Copyright 2016 ITEA 12004 SEAS Project.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, 
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX seas-greenbutton: <http://w3id.org/seas/greenbutton#>
PREFIX rqg-ite: <http://w3id.org/sparql-generate/ite/>
PREFIX rqg-fn: <http://w3id.org/sparql-generate/fn/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>

GENERATE
{
	<> a foaf:Document ;
	dc:created ?published ;
	dc:modified ?updated ;
	dc:primaryTopic ?id_uri .

	# testing variable ?self
	<s> <p> ?self .

	?up seas-greenbutton:UsagePoint ?id_uri .

	# Atom stuff
	?id_uri a seas-greenbutton:UsagePoint ;
	owl:sameAs ?self ;

	# UsagePoint stuff
	seas-greenbutton:kind ?kind_uri .

	# generate one triple for each related atom link
	GENERATE
	{
		?id_uri rdfs:seeAlso ?var .
	}

	ITERATOR rqg-ite:XPath(?message , "/entry/link[@rel=\"related\"]") AS ?var .
} 
WHERE
{
	# Get atom variables
	BIND(rqg-fn:XPath(?message, "/entry/id[1]") AS ?id)
	BIND(rqg-fn:XPath(?message, "/entry/link[@rel=\"self\"]") AS ?self)
	BIND(rqg-fn:XPath(?message, "/entry/link[@rel=\"up\"]") AS ?up)
	BIND(rqg-fn:XPath(?message, "/entry/title[1]") AS ?title)
	BIND(rqg-fn:XPath(?message, "/entry/published[1]") AS ?published)
	BIND(rqg-fn:XPath(?message, "/entry/updated[1]") AS ?updated)

	# Map Atom variables with seas ontology
	BIND(URI(CONCAT("urn:uuid:", ?id)) AS ?id_uri)

	# Get UsagePoint variables
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:roleFlags" ) AS ?roleFlags_gb)
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:ServiceCategory/espi:kind" ) AS ?kind_gb)
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:status" ) AS ?status_gb)
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:ServiceDeliveryPoint/espi:name" ) AS ?name_gb)
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:ServiceDeliveryPoint/espi:tariffProfile" ) AS ?tariffProfile_gb)
	BIND(rqg-fn:XPath(?message, "/entry/content[1]/espi:UsagePoint/espi:ServiceDeliveryPoint/espi:customerAgreement" ) AS ?customerAgreement_gb)

	# Map UsagePoint variables with seas ontology
	BIND(IF(?kind_xml = "0", seas-greenbutton:ElectricityKind, IF(?kind_xml = "1", seas-greenbutton:WaterKind, "no")) AS ?kind_uri)
}
